package napi

import (
	"fmt"
	"path/filepath"
	"strings"
)

func (g *PackageGenerator) writeFileCodegenHeader(w *strings.Builder) {
	w.WriteString("// Code generated by gen-napi. DO NOT EDIT.\n")
}

func (g *PackageGenerator) writeESLintIgnore(w *strings.Builder) {
	w.WriteString("/* eslint-disable */\n")
}

func (g *PackageGenerator) writeFileFrontmatter(w *strings.Builder) {
	if g.conf.Frontmatter != "" {
		w.WriteString(g.conf.Frontmatter)
	}
}

func (g *PackageGenerator) writeFileSourceHeader(w *strings.Builder, path string) {
	w.WriteString("\n//////////\n// source: ")
	w.WriteString(fmt.Sprintf("%s\n", filepath.Base(path)))
	w.WriteByte('\n')
}

func (g *PackageGenerator) writeFFIHeaders(w *strings.Builder) {
	w.WriteString("import { dlopen, FFIType, ptr, toArrayBuffer } from 'bun:ffi';\n")
}
